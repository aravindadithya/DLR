# Stage 1: Build Image
FROM pytorch/pytorch:latest

# Install Git and OpenSSH client
RUN apt-get update && apt-get install -y git openssh-client

# Set the working directory
WORKDIR /workspace

# Generate a new SSH key pair inside the container during build
# -t rsa: Specifies RSA algorithm
# -b 4096: Specifies 4096-bit key length (stronger)
# -f /root/.ssh/id_rsa: Specifies the output file for the private key
# -N "": Creates the key without a passphrase. This is common for automated
#        environments but means anyone with access to the image can use the key.
#        If you need a passphrase, you'll have to manage it at runtime.
RUN mkdir -p /root/.ssh && \
    ssh-keygen -t rsa -b 4096 -f /root/.ssh/id_rsa -N "" && \
    chmod 600 /root/.ssh/id_rsa && \
    chmod 644 /root/.ssh/id_rsa.pub

# Add your Git host to known_hosts to avoid host key verification prompts
# Replace github.com with your actual Git host (e.g., gitlab.com, bitbucket.org)
RUN ssh-keyscan github.com >> /root/.ssh/known_hosts

# Install and Setup LFS
RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash && \
    apt-get install -y git-lfs && \
    git lfs install

# Clone a branch from a given git repository into the workspace directory.
# This step assumes the repository is public or you've added the generated
# public key to the repository's deploy keys (see instructions below).
# Replace <repository_url> with your Git repository URL and <branch_name> with your branch.
ARG REPOSITORY_URL
ARG BRANCH_NAME
RUN git clone --branch ${BRANCH_NAME} ${REPOSITORY_URL} DLR

# Set the DLR directory as the working directory for subsequent commands
WORKDIR /workspace/DLR

# pip install requirements.txt wrt to the workspace dir
# Also install JupyterLab here
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Set DLR as a reference for all imports
ENV PYTHONPATH="/workspace/DLR:${PYTHONPATH}"

# Command to run when the container starts
CMD ["bash"]
